trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Ajusta tus variables
  renderApiToken: 'rnd_zTf4ojtecctqBDNOkwRAyr7nTkeC'
  serviceId: 'srv-cvh2bjlrie7s73ejbm8g'
  dockerRegistryServiceConnection: 'backendSistemaInventario'

jobs:
- job: BuildAndDeploy
  displayName: 'Build and Deploy Docker container to Render'
  steps:

    # 1. Checkout del código
    - checkout: self
      clean: true

    # 2. (Opcional) Construir y subir imagen a Docker Hub
    - task: Docker@2
      displayName: 'Build and push Docker image'
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        command: buildAndPush
        dockerfile: 'backendSistemaInventario/Dockerfile'
        repository: 'jpablo1106/backendSistemaInventario'
        tags: |
          $(Build.BuildId)
          latest

    # 3. Desplegar a Render usando un script Bash
    - task: Bash@3
      displayName: 'Deploy to Render'
      inputs:
        targetType: 'inline'
        script: |
          echo "Iniciando despliegue en Render..."
          response=$(curl -s -w "%{http_code}" -o response.json \
                         -X POST https://api.render.com/deployments \
                         -H "Authorization: Bearer $(renderApiToken)" \
                         -H "Content-Type: application/json" \
                         -d '{
                               "branch": "master",
                               "serviceId": "$(serviceId)"
                             }')

          if [[ "$response" -eq 200 ]]; then
            echo "Despliegue exitoso."
          else
            echo "Error en el despliegue. Código de respuesta: $response"
            cat response.json
            exit 1
          fi
