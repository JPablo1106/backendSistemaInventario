trigger:
  branches:
    include:
      - master  # O la rama que utilices para los despliegues

pool:
  vmImage: 'ubuntu-latest'

variables:
  renderApiToken: 'rnd_zTf4ojtecctqBDNOkwRAyr7nTkeC'  # Token de Render
  serviceId: 'srv-cvh2bjlrie7s73ejbm8g'  # ID del servicio en Render
  dockerRegistryServiceConnection: 'DockerHubServiceConnection'  # Ajusta al nombre real de tu Service Connection

jobs:
  - job: BuildAndDeploy
    displayName: 'Build and Deploy Docker container to Render'
    steps:
      # Checkout del repositorio
      - checkout: self
        clean: true

      # Construir la imagen Docker
      - task: Docker@2
        displayName: 'Build Docker image'
        inputs:
          containerRegistry: $(dockerRegistryServiceConnection)
          command: build
          dockerfile: 'backendSistemaInventario/Dockerfile'
          tags: |
            $(Build.BuildId)
            latest

      # Desplegar la imagen a Render
      - task: AzureCLI@2
        displayName: 'Deploy to Render'
        inputs:
          azureSubscription: 'Azure for Students'  # Solo si lo necesitas
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            echo "Iniciando despliegue en Render..."
            response=$(curl -s -w "%{http_code}" -o response.json -X POST https://api.render.com/deployments \
                         -H "Authorization: Bearer $(renderApiToken)" \
                         -H "Content-Type: application/json" \
                         -d '{
                               "branch": "master", 
                               "serviceId": "$(serviceId)"
                             }')
            if [[ "$response" -eq 200 ]]; then
              echo "Despliegue exitoso."
            else
              echo "Error en el despliegue. CÃ³digo de respuesta: $response"
              cat response.json
              exit 1
            fi
